Description: |
  This module creates an S3 bucket that will pass common compliance checks 
  by default. It also creates an associated log bucket and replica bucket.

Parameters:

  AppName:
    Type: String
    Description: |
      This string will serve as a prefix for all resource names, which have 
      the general form of AppName-ResourceName-Region-Account. 

Constants:
  S3Arn: "arn:${AWS::Partition}:s3:::"
  BucketName: "${AppName}-${AWS::Region}-${AWS::AccountId}"
  LogBucketName: "${AppName}-logs-${AWS::Region}-${AWS::AccountId}"
  LogBucketArn: "${Const::S3Arn}${Const::LogBucketName}"
  ReplicaBucketName: "${AppName}-replicas-${AWS::Region}-${AWS::AccountId}"

Modules:

  LogBucketAccess:
    Source: "bucket-policy.yaml"
    Properties:
      PolicyBucketName: !Sub ${Const::LogBucketName}
    Overrides:
      Policy:
        Properties:
          PolicyDocument:
            Statement:
              - Action: s3:*
                Condition:
                  Bool:
                    aws:SecureTransport: false
                Effect: Deny
                Principal:
                  AWS: '*'
                Resource:
                  - !Sub ${Const::LogBucketArn}
                  - !Sub ${Const::LogBucketArn}/*
              - Action: s3:PutObject
                Condition:
                  ArnLike:
                    aws:SourceArn: !Sub ${Const::LogBucketArn}/*
                  StringEquals:
                    aws:SourceAccount: !Ref AWS::AccountId
                Effect: Allow
                Principal:
                  Service: logging.s3.amazonaws.com
                Resource:
                  - !Sub ${Const::LogBucketArn}/*

  BucketAccess:
    Source: "bucket-policy.yaml"
    Properties:
      PolicyBucketName: !Sub ${AppName}-${AWS::Region}-${AWS::AccountId}

  ReplicaBucketAccess:
    Source: "bucket-policy.yaml"
    Properties:
      PolicyBucketName: !Sub ${AppName}-replicas-${AWS::Region}-${AWS::AccountId}

Resources:

  LogBucket:
    Type: AWS::S3::Bucket
    Metadata:
      Comment: This bucket records access logs for the main bucket
      checkov:
        skip:
          - comment: This is the log bucket
            id: CKV_AWS_18
      guard:
        SuppressedRules:
          - S3_BUCKET_LOGGING_ENABLED
          - S3_BUCKET_REPLICATION_ENABLED
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${Const::LogBucketName}
      ObjectLockConfiguration:
        ObjectLockEnabled: Enabled
        Rule:
          DefaultRetention:
            Mode: COMPLIANCE
            Years: 1
      ObjectLockEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  Bucket:
    Type: AWS::S3::Bucket
    Metadata:
      guard:
        SuppressedRules:
          - S3_BUCKET_DEFAULT_LOCK_ENABLED
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${Const::BucketName}
      LoggingConfiguration:
        DestinationBucketName: !Ref LogBucket
      ObjectLockEnabled: false
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      ReplicationConfiguration:
        Role: !GetAtt ReplicationRole.Arn
        Rules:
          - Destination:
              Bucket: !GetAtt ReplicaBucket.Arn
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled

  ReplicaBucket:
    Type: AWS::S3::Bucket
    Metadata:
      Comment: This bucket is used as a target for replicas from the main bucket
      checkov:
        skip:
          - comment: This is the replica bucket
            id: CKV_AWS_18
      guard:
        SuppressedRules:
          - S3_BUCKET_DEFAULT_LOCK_ENABLED
          - S3_BUCKET_REPLICATION_ENABLED
          - S3_BUCKET_LOGGING_ENABLED
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub ${AppName}-replicas-${AWS::Region}-${AWS::AccountId}
      ObjectLockEnabled: false
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled

  ReplicationPolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetReplicationConfiguration
              - s3:ListBucket
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}
          - Action:
              - s3:GetObjectVersionForReplication
              - s3:GetObjectVersionAcl
              - s3:GetObjectVersionTagging
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${AppName}-${AWS::Region}-${AWS::AccountId}/*
          - Action:
              - s3:ReplicateObject
              - s3:ReplicateDelete
              - s3:ReplicationTags
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:s3:::${AppName}-replicas-${AWS::Region}-${AWS::AccountId}/*
        Version: "2012-10-17"
      PolicyName: bucket-replication-policy
      RoleName: !Ref ReplicationRole

  ReplicationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - s3.amazonaws.com
        Version: "2012-10-17"
      Path: /


