Parameters:

  CidrBlock:
    Type: String

  PrivateCidrBlocks:
    Type: CommaDelimitedList

  PublicCidrBlocks:
    Type: CommaDelimitedList

  NatAllocationIds:
    Type: List<String>
    Default: ""
    Description: Optionally provide a list of pre-provisioned EIP allocation IDs

Conditions:
  NeedToCreateEIPs:
    Fn::Equals:
      - !Ref NatAllocationIds
      - ""

Modules:

  EIP:
    Condition: NeedToCreateEIPs
    Source: ./eip.yaml
    Map: !Ref PublicCidrBlocks
    Overrides:
      Address:
        DependsOn: GatewayAttachment

  PublicSubnet:
    Map: !Ref PublicCidrBlocks
    Source: ./subnet.yaml
    Properties:
      SubnetCidrBlock: $MapValue
      AZSelection: $MapIndex
      VPCId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      IsPublic: true
      NATIPID: 
        Fn::If:
          - NeedToCreateEIPs
          - !GetAtt EIP[$MapIndex].AllocationId
          - Fn::Select:
            - NatAllocationIds
            - $MapIndex
    Overrides:
      DefaultRoute:
        DependsOn: GatewayAttachment

  PrivateSubnet:
    Map: !Ref PrivateCidrBlocks
    Source: ./subnet.yaml
    Properties:
      SubnetCidrBlock: $MapValue
      AZSelection: $MapIndex
      VPCId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
      IsPublic: false
      PublicNATGateway: !GetAtt PublicSubnet[$MapIndex].NATGateway
    Overrides:
      DefaultRoute:
        DependsOn: GatewayAttachment
  

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref CidrBlock 
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC


Outputs:
  VpcId:
    Value: !Ref VPC


