Description: A multi-stage application delivery pipeline. Stages can be deployed to separate accounts. Automated test actions after deployments can be used to stop the pipeline if any tests fail. Apache-2.0 License. Adapt this template to your needs and thoruoughly test it before introducing it in a production environment. **WARNING** This template will create resources in your account that may incur billing charges.

Parameters:

  AppName:
    Type: String
    Description: The unique name for this application. The name will be used as a part of resource names and tags.

  TeamName:
    Type: String
    Description: The name of the team that owns this application.
  
  StageNames:
    Type: String
    Description: A list of stage names, for example, "dev,stage,prod"
    Default: prod

  Accounts:
    Type: String
    Description: A list of accounts to match the stage names. If left blank, the assumption is that this is a single-account pipeline that is being deployed to the currently configured AWS account. This template does not bootstrap those accounts. Bootstrapping has to be done prior to deploying this template.
    Default: ""

  PipelineSourceKey:
    Type: String
    Description: The name of the S3 object key for the pipeline source
    Default: pipeline-source.zip

  AppSourceKey:
    Type: String
    Description: The name of the S3 object key for the application source
    Default: app-source.zip

  # Note: For each new parameter added here, also add it to the SelfMutate action

Constants:
  S3Arn: "arn:${AWS::Partition}:s3:::"
  PipelineSourceArn: ${Constant::S3Arn}${PipelineSource.BucketName}
  AppSourceArn: ${Constant::S3Arn}${AppSource.BucketName}
  ArtifactArn: ${Constant::S3Arn}${Artifacts.BucketName}

Modules:

  PipelineSource:
    Source: ../../../modules/bucket.yaml
    Properties:
      Name: !Sub ${AppName}-pipeline-source
      EnableEventBridge: true

  AppSource:
    Source: ../../../modules/bucket.yaml
    Properties:
      Name: !Sub ${AppName}-app-source

  Artifacts:
    Source: ../../../modules/bucket.yaml
    Properties:
      Name: !Sub ${AppName}-artifacts

  Validate:
    Description: Build project to validate compliance
    Source: ../../../modules/build-project.yaml
    Properties:
      Name: !Sub ${AppName}-validate
      ArtifactBucket: !Sub ${Artifacts.BucketName}

  Build:
    Description: Build project for the application source
    Source: ../../../modules/build-project.yaml
    Properties:
      Name: !Sub ${AppName}-build
      ArtifactBucket: !Sub ${Artifacts.BucketName}

  Event:
    Source: ../../../modules/pipeline-events.yaml
    Properties:
      PipelineName: !Ref Pipeline
    Overrides:
      Rule:
        Properties:
          EventPattern:
            detail:
              bucket:
                name:
                  - !GetAtt PipelineSource.BucketName
                  - !GetAtt AppSource.BucketName

Resources:

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Ref AppName
      RoleArn: !GetAtt PipelineRole.Arn
      RestartExecutionOnUpdate: true
      ArtifactStore:
        Type: S3
        Location: !Sub ${Artifacts.BucketName}
      Stages:
        - Name: Source
          Actions:
            - Name: PipelineSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                S3Bucket: !Sub ${PipelineSource.BucketName}
                S3ObjectKey: !Ref PipelineSourceKey
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: pipeline-source
            - Name: AppSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                S3Bucket: !Sub ${AppSource.BucketName}
                S3ObjectKey: !Ref AppSourceKey
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: app-source
        - Name: SelfMutate
          Actions:
            - Name: StackUpdate
              InputArtifacts:
                - Name: pipeline-source
                - Name: app-source
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub ${AWS::StackName}
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt PipelineMutateRole.Arn
                TemplatePath: pipeline-source::template.yaml
                ParameterOverrides: !Sub | 
                  {
                    "AppName": "${AppName}",
                    "TeamName": "${TeamName}",
                    "StageNames": "${StageNames}",
                    "Accounts": "${Accounts}",
                    "PipelineSourceKey": "${PipelineSourceKey}",
                    "AppSourceKey": "${AppSourceKey}"
                  }
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Validate
              InputArtifacts:
                - Name: pipeline-source
                - Name: app-source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !GetAtt Validate.ProjectName
                PrimarySource: pipeline-source
              RunOrder: 1
            - Name: Build
              InputArtifacts:
                - Name: app-source
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !GetAtt Build.ProjectName
              RunOrder: 1

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
        Version: '2012-10-17'

  PipelinePolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: !Sub "${AppName}-pipeline-policy"
      RoleName: !Ref PipelineRole
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !Sub ${Constant::ArtifactArn}
              - !Sub ${Constant::ArtifactArn}/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - !Sub ${Constant::AppSourceArn}
              - !Sub ${Constant::AppSourceArn}/*
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
            Effect: Allow
            Resource:
              - !Sub ${Constant::PipelineSourceArn}
              - !Sub ${Constant::PipelineSourceArn}/*
          - Action:
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:StopBuild
              - codebuild:RetryBuild
              - codebuild:StartBuildBatch
              - codebuild:RetryBuildBatch
              - codebuild:StopBuildBatch
            Effect: Allow
            Resource:
              - !GetAtt ValidateProject.Arn
              - !GetAtt BuildProject.Arn
          - Action:
              - iam:PassRole
            Effect: Allow
            Resource: !GetAtt PipelineMutateRole.Arn
          - Action:
              - cloudformation:DescribeStacks
              - cloudformation:UpdateStack
            Effect: Allow
            Resource:
              - !Sub ${AWS::StackId}

  PipelineMutateRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
        Version: '2012-10-17'

  PipelineMutatePolicy:
    Type: AWS::IAM::RolePolicy
    Properties:
      PolicyName: !Sub "${AppName}-pipeline-mutate-policy"
      RoleName: !Ref PipelineMutateRole
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetObject*
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
              - s3:PutObject*
              - s3:Abort*
            Effect: Allow
            Resource:
              - !Sub ${Constant::ArtifactArn}
              - !Sub ${Constant::ArtifactArn}/*
          - Action:
              - cloudformation:DescribeStacks
            Effect: Allow
            Resource:
              - !Sub ${AWS::StackId}


Outputs:

  AppSourceBucket:
    Value: !Sub ${AppSource.BucketName}

  PipelineSourceBucket:
    Value: !Sub ${PipelineSource.BucketName}

